'use strict';

module.exports = function () {
	var timeout = arguments.length <= 0 || arguments[0] === undefined ? 60 : arguments[0];

	var rejections = [];

	return {
		register: function register(errorData) {
			var _this = this;

			rejections.push(errorData);

			setTimeout(function () {
				_this.unregister(errorData);
			}, timeout * 1000);
		},
		unregister: function unregister(errorData) {
			var errorIndex = rejections.indexOf(errorData);

			if (errorIndex !== -1) {
				rejections.splice(errorIndex, 1);
			}
		},
		exists: function exists(errorData) {
			return rejections.some(function (item) {
				return item.promise === errorData.promise && item.error === errorData.error;
			});
		},
		find: function find(promise) {
			return rejections.find(function (item) {
				return item.promise === promise;
			});
		}
	};
};